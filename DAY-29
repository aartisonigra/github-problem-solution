School Attendance System
Problem Statement
You are appointed as a manager in a school, and you are asked to design a school attendance system that requires the following requirements:
Each student is given a roll number from 1 to N, as N students study there. Now each of the students performs the following action a single time in this order:
If the student’s i’s roll number has not been called out yet, then he calls out student A[i]’s roll number.
Your system should return all the roll numbers of all the students whose roll numbers are never called out until the end in sequential order.

Input Format
The first Line contains two integers N representing the size of the array.
The second line contains N integers representing elements of the array.

Output Format
Return all the roll numbers of all the students whose roll numbers are never called out until the end in sequential order.

Constraints
2 <= N <= 10^5.
1 <= A[i] <= N.

Sample Testcase 0
Testcase Input
2
2 1
Testcase Output
1
Explanation
Student 1 ID is not called out until the end.
Sample Testcase 1
Testcase Input
5
3 1 4 5 4
Testcase Output
2 4
Explanation
The five students’ actions are as follows.

Student 1's ID has not been called out yet, so student 1 calls out student 3's ID.

Student 2's ID has not been called out yet, so student 2 calls out student 1's ID.

Student 3's ID has already been called out by student 1, so nothing happens.

Student 4's ID has not been called out yet, so student 4 calls out student 5's ID.

Student 5's ID has already been called out by student 4, so nothing happens.

Therefore, student 2 and 4's IDs are not called out until the end.

SOLTUIONS:

import java.util.*;

public class Main {
    public static List<Integer> userLogic(int n, List<Integer> arr) {
        boolean[] called = new boolean[n + 1]; // 1-based indexing

        for (int i = 0; i < n; i++) {
            // student (i+1) has not been called yet
            if (!called[i + 1]) {
                int calledRoll = arr.get(i);
                called[calledRoll] = true; // Mark that this roll is called
            }
        }

        List<Integer> result = new ArrayList<>();
        for (int i = 1; i <= n; i++) {
            if (!called[i]) {
                result.add(i); // Roll number never called
            }
        }

        return result;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        List<Integer> arr = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            arr.add(sc.nextInt());
        }
        List<Integer> result = userLogic(n, arr);
        for (int num : result) {
            System.out.print(num + " ");
        }
    }
}
